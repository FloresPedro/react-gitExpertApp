{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEKI,MAAOF,GAFZ,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAYxC,OALAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CAAEf,KAAMkB,EAAML,SAAS,SACpD,CAAEpB,IAEEqB,EDRmBK,CAAa1B,GAA/BoB,EAF2B,EAE3BA,QAASb,EAFkB,EAElBA,KAEjB,OACI,qCACA,6BAAKP,IAEHoB,GAAW,yCAEb,qBAAKJ,UAAU,YAAf,SAGYT,EAAKE,KAAI,SAAAC,GAAG,OAAK,cAAC,EAAD,eAEaA,GADAA,EAAIC,aEcvCgB,EA5BM,WAAM,MAGazC,mBAAS,CAAC,cAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KASvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MClBjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4ca86d0a.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleImputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (inputValue.trim().length > 2){\n            setCategories( cats => [ inputValue, ...cats, ])\n            setInputValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type='text'\n                value = {inputValue}\n                onChange={handleImputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","\nexport const getGifs = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=AzQK4mitwh1RHR31Hm2cKTTWKjDJj5Nk`;\n    const respuesta = await fetch( url );\n    const {data} = await respuesta.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    } )\n    \n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n  \n    return (\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n\n\nexport const GifGrid = ({category}) => {\n\n    const { loading, data } = useFetchGifs(category);\n\n    return (\n        <>\n        <h3>{category}</h3>\n\n        { loading && <p>Cargando</p> }\n        \n        <div className=\"card-grid\">\n            \n                {\n                    data.map(img  => <GifGridItem\n                                             key={img.id}\n                                             { ...img } /> )\n                }\n           \n        </div>\n        </> \n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs( category )\n            .then( imgs => setState({ data: imgs, loading: false}) )\n    }, [ category ])\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\n\nconst GitExpertApp = () => {\n\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch']);\n\n    /* const handleAdd = () => {\n        setCategories( [...categories,'Don gato'] )\n    } */\n\n    return (\n        <>\n            <h2>GitExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n            <ol>\n                {\n                    categories.map(category => \n                        <GifGrid \n                            key={category}\n                            category={category}     \n                        />\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GitExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp'\nimport './index.css'\n\nReactDOM.render(  \n    <GitExpertApp />,  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}